Index: project/src/main/resources/liquibase/changelog/20240210163300_add_all_entities.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- 1. Person\nCREATE TABLE person (\n                        id serial PRIMARY KEY,\n                        first_name VARCHAR(255) NOT NULL,\n                        last_name VARCHAR(255) NOT NULL,\n                        middle_name VARCHAR(255),\n                        login VARCHAR(255) NOT NULL UNIQUE,\n                        email VARCHAR(255) NOT NULL UNIQUE\n);\nCREATE TABLE role (\n                      role_id serial PRIMARY KEY,\n                      role VARCHAR(255) NOT NULL,\n                      description TEXT\n);\n\n-- 2. Person Info\n\n\nCREATE TABLE person_role (\n                             person_id INT,\n                             role_id INT,\n                             PRIMARY KEY (person_id, role_id),\n                             FOREIGN KEY (person_id) REFERENCES person(id),\n                             FOREIGN KEY (role_id) REFERENCES role(role_id)\n);\n\n-- 4. Person Authority\nCREATE TABLE person_authority (\n                                  person_authority_id serial PRIMARY KEY,\n                                  person_id INT NOT NULL,\n                                  last_login date,\n                                  password_hash TEXT NOT NULL,\n                                  active BOOLEAN NOT NULL,\n                                  user_role_id INT,\n                                  password_refresh_date DATE,\n                                  isRefreshed BOOLEAN NOT NULL,\n                                  FOREIGN KEY (person_id) REFERENCES person(id),\n                                  FOREIGN KEY (user_role_id) REFERENCES role(role_id)\n);\n\n\nCREATE TABLE specialty (\n                           specialty_id serial PRIMARY KEY,\n                           name VARCHAR(255) NOT NULL,\n                           code VARCHAR(50) NOT NULL\n);\nCREATE TABLE course (\n                        course_id serial PRIMARY KEY,\n                        speciality_id INT,\n                        code VARCHAR(50) NOT NULL,\n                        name VARCHAR(255) NOT NULL,\n                        description TEXT,\n                        FOREIGN KEY (speciality_id) REFERENCES specialty(specialty_id)\n);\nCREATE TABLE person_info (\n                             person_info_id serial PRIMARY KEY,\n                             person_id INT NOT NULL,\n                             gender VARCHAR(255) NOT NULL ,\n<<<<<<< HEAD\n                             image bytea ,\n                             telephone VARCHAR(255)NOT NULL ,\n                             birth_date DATE NOT NULL ,\n                             specialty_id INT,\n                             FOREIGN KEY (person_id) REFERENCES person(id),\n                             FOREIGN KEY (specialty_id) REFERENCES specialty(specialty_id)\n=======\n                             image TEXT,\n                             telephone VARCHAR(255)NOT NULL ,\n                             birth_date DATE NOT NULL ,\n                             speciality_id INT,\n                             FOREIGN KEY (person_id) REFERENCES person(id),\n                             FOREIGN KEY (speciality_id) REFERENCES specialty(specialty_id)\n>>>>>>> master\n);\nCREATE TABLE class_room (\n                             class_room_id serial PRIMARY KEY,\n                             room_number VARCHAR(50) NOT NULL UNIQUE\n );\n\n\nCREATE TABLE section (\n                         section_id serial PRIMARY KEY,\n                         name VARCHAR(255) NOT NULL,\n                         course_id INT,\n                         schedule_id INT,\n                         person_id INT, -- Teacher\n                         quota INT,\n                         count INT,\n                         type VARCHAR(255),\n                         related_section_name VARCHAR(255),\n                         FOREIGN KEY (course_id) REFERENCES course(course_id),\n                         FOREIGN KEY (person_id) REFERENCES person(id)\n);\n\nCREATE TABLE schedule (\n                          schedule_id serial PRIMARY KEY,\n                          section_id INT,\n                          class_room_id INT,\n                          day_of_week INT NOT NULL,\n<<<<<<< HEAD\n                          start_time TIME,\n=======\n                          start_time VARCHAR(255),\n>>>>>>> master\n                          total_hours INT,\n                          FOREIGN KEY (section_id) REFERENCES section(section_id),\n                          FOREIGN KEY (class_room_id) REFERENCES class_room(class_room_id)\n);\nCREATE TABLE reason_for_absence (\n                                    reason_id serial PRIMARY KEY,\n                                    person_id INT,\n                                    section_id INT,\n                                    description TEXT,\n                                    document TEXT,\n                                    status VARCHAR(255),\n                                    isAccepted BOOLEAN,\n                                    FOREIGN KEY (person_id) REFERENCES person(id),\n                                    FOREIGN KEY (section_id) REFERENCES section(section_id)\n);\n\n\n\n\n-- 11. Attendance Record\nCREATE TABLE attendance_record (\n                                   record_id serial PRIMARY KEY,\n<<<<<<< HEAD\n                                   student_id INT,\n                                   schedule_id INT,\n                                   total_seating_hours INT,\n                                   current_week INT,\n                                   FOREIGN KEY (student_id) REFERENCES person(id),\n=======\n                                   person_id INT,\n                                   schedule_id INT,\n                                   total_seating_hours INT,\n                                   current_week INT,\n                                   FOREIGN KEY (person) REFERENCES person(id),\n>>>>>>> master\n                                   FOREIGN KEY (schedule_id) REFERENCES schedule(schedule_id)\n);\n\n-- 12. Reason For Absence\n\n-- 13. Attendance Info\nCREATE TABLE Attendance_info (\n                                 attendance_info_id serial PRIMARY KEY,\n                                 person_id INT,\n                                 record_type VARCHAR(255) NOT NULL,\n<<<<<<< HEAD\n                                 percent DECIMAL(5, 2) NOT NULL,\n=======\n                                 percent INT NOT NULL,\n>>>>>>> master\n                                 section_id INT NOT NULL,\n                                 FOREIGN KEY (person_id) REFERENCES person(id),\n                                 FOREIGN KEY (section_id) REFERENCES section(section_id)\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/src/main/resources/liquibase/changelog/20240210163300_add_all_entities.sql b/project/src/main/resources/liquibase/changelog/20240210163300_add_all_entities.sql
--- a/project/src/main/resources/liquibase/changelog/20240210163300_add_all_entities.sql	(revision 5ea81cc2f3f8b682a6d9072ef8eeab606028000f)
+++ b/project/src/main/resources/liquibase/changelog/20240210163300_add_all_entities.sql	(date 1707982943414)
@@ -56,21 +56,18 @@
                              person_info_id serial PRIMARY KEY,
                              person_id INT NOT NULL,
                              gender VARCHAR(255) NOT NULL ,
-<<<<<<< HEAD
                              image bytea ,
                              telephone VARCHAR(255)NOT NULL ,
                              birth_date DATE NOT NULL ,
                              specialty_id INT,
-                             FOREIGN KEY (person_id) REFERENCES person(id),
-                             FOREIGN KEY (specialty_id) REFERENCES specialty(specialty_id)
-=======
                              image TEXT,
+                             FOREIGN KEY (person_id) REFERENCES person(id),
+                             FOREIGN KEY (specialty_id) REFERENCES specialty(specialty_id),
                              telephone VARCHAR(255)NOT NULL ,
                              birth_date DATE NOT NULL ,
                              speciality_id INT,
                              FOREIGN KEY (person_id) REFERENCES person(id),
                              FOREIGN KEY (speciality_id) REFERENCES specialty(specialty_id)
->>>>>>> master
 );
 CREATE TABLE class_room (
                              class_room_id serial PRIMARY KEY,
@@ -97,11 +94,8 @@
                           section_id INT,
                           class_room_id INT,
                           day_of_week INT NOT NULL,
-<<<<<<< HEAD
                           start_time TIME,
-=======
                           start_time VARCHAR(255),
->>>>>>> master
                           total_hours INT,
                           FOREIGN KEY (section_id) REFERENCES section(section_id),
                           FOREIGN KEY (class_room_id) REFERENCES class_room(class_room_id)
@@ -124,19 +118,16 @@
 -- 11. Attendance Record
 CREATE TABLE attendance_record (
                                    record_id serial PRIMARY KEY,
-<<<<<<< HEAD
                                    student_id INT,
                                    schedule_id INT,
                                    total_seating_hours INT,
                                    current_week INT,
                                    FOREIGN KEY (student_id) REFERENCES person(id),
-=======
                                    person_id INT,
                                    schedule_id INT,
                                    total_seating_hours INT,
                                    current_week INT,
-                                   FOREIGN KEY (person) REFERENCES person(id),
->>>>>>> master
+                                   FOREIGN KEY (person_id) REFERENCES person(id),
                                    FOREIGN KEY (schedule_id) REFERENCES schedule(schedule_id)
 );
 
@@ -147,11 +138,8 @@
                                  attendance_info_id serial PRIMARY KEY,
                                  person_id INT,
                                  record_type VARCHAR(255) NOT NULL,
-<<<<<<< HEAD
                                  percent DECIMAL(5, 2) NOT NULL,
-=======
                                  percent INT NOT NULL,
->>>>>>> master
                                  section_id INT NOT NULL,
                                  FOREIGN KEY (person_id) REFERENCES person(id),
                                  FOREIGN KEY (section_id) REFERENCES section(section_id)
